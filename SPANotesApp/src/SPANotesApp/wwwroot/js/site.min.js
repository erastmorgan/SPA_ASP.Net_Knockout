function getExpTimeTypesServ(){return $.Deferred(function(){var n=this;$.get("/api/exptimetypes",function(t){n.resolve(t)})})}function getAllItemsServ(){return $.Deferred(function(){var n=this;sendAjaxRequest("GET",function(t){n.resolve(t)})})}function openItemServ(n){return $.Deferred(function(){var t=this;sendAjaxRequest("GET",function(n){t.resolve(n)},n)})}function addItemServ(n){return $.Deferred(function(){var t=this;sendAjaxRequest("POST",function(n){t.resolve(n)},null,n)})}function sendAjaxRequest(n,t,i,r){$.ajax("/api/notes"+(i!==undefined&&i!==null?"/"+i:""),{type:n,success:t,data:r,contentType:"application/json",dataType:"json"})}function changeSectionsVisibility(n){n==="List"?(koModel.showItemsList(!0),koModel.showAddNew(!1),koModel.showSelectedItem(!1)):n==="New"?(koModel.newItem.name(""),koModel.newItem.description(""),koModel.newItem.expTimeType.key(koModel.expTimeTypes()[0].key),koModel.newItem.expTimeType.value(koModel.expTimeTypes()[0].value+'&nbsp;<span class="caret"><\/span>'),koModel.showItemsList(!1),koModel.showAddNew(!0),koModel.showSelectedItem(!1)):n==="Selected"&&(koModel.showItemsList(!1),koModel.showAddNew(!1),koModel.showSelectedItem(!0));koModel.errorMessage("")}function addItem(n){if(n.newItem.name()==""||n.newItem.name()===undefined||n.newItem.description()==""||n.newItem.description()===undefined){alert("Note name and description fields are required.");return}$.when(addItemServ(JSON.stringify({name:n.newItem.name(),description:n.newItem.description(),expTimeType:n.newItem.expTimeType.key()}))).then(function(){$.when(getAllItemsServ()).then(function(n){getAllItems(n)})})}function openItem(n){$.when(openItemServ(n.noteId)).then(function(n){if(n===undefined||n===null){koModel.errorMessage("The data is not available or has expiration date/time.");return}koModel.selectedItem.name("Subject: "+n.name);koModel.selectedItem.description(n.description);koModel.selectedItem.createdDateTime(formatDate(new Date(n.createdDateTime)));var t=formatDate(new Date(n.expirationDateTime)),i="12/31/9999 11:59 pm"===t?"Never":t;koModel.selectedItem.expirationDateTime(i);changeSectionsVisibility("Selected")})}function getAllItems(n){koModel.notes.removeAll();for(var t=0;t<n.length;t++)koModel.notes.push(n[t]);changeSectionsVisibility("List")}function getExpTimeTypes(){$.get("/api/exptimetypes",function(n){koModel.expTimeTypes.removeAll();for(var t=0;t<n.length;t++)koModel.expTimeTypes.push(n[t]);koModel.newItem.expTimeType.key(n[0].key);koModel.newItem.expTimeType.value(n[0].value+'&nbsp;<span class="caret"><\/span>')})}function selectExpTime(n){koModel.newItem.expTimeType.key(n.key);koModel.newItem.expTimeType.value(n.value+'&nbsp;<span class="caret"><\/span>')}function formatDate(n){var t=n.getHours(),i=n.getMinutes(),u=t>=12?"pm":"am",r;return t=t%12,t=t?t:12,i=i<10?"0"+i:i,r=t+":"+i+" "+u,n.getMonth()+1+"/"+n.getDate()+"/"+n.getFullYear()+" "+r}var model={notes:ko.observableArray(),expTimeTypes:ko.observableArray(),newItem:{name:ko.observable(),description:ko.observable(),expTimeType:{key:ko.observable(),value:ko.observable()}},selectedItem:{name:ko.observable(),description:ko.observable(),createdDateTime:ko.observable(),expirationDateTime:ko.observable()},showItemsList:ko.observable(!0),showSelectedItem:ko.observable(!1),showAddNew:ko.observable(!1),errorMessage:ko.observable("")},koModel=model;$(document).ready(function(){$.when(getAllItemsServ()).then(getAllItems);$.when(getExpTimeTypesServ()).then(getExpTimeTypes);ko.applyBindings(koModel)});